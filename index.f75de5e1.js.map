{"mappings":"AAAA;AAEA,MAAM,gBAAgB;OAAI,SAAS,gBAAgB,CAAC;CAAM;AAC1D,MAAM,qBAAqB,SAAS,aAAa,CAAC;AAElD,SAAS,SAAS,IAAI,EAAE,aAAa;IACnC,MAAM,aAAa,KAAK,IAAI,CAAC,CAAC,GAAG;QAC/B,MAAM,UAAU,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK;QACxD,MAAM,UAAU,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK;QAExD,OAAO,UAAU;IACnB;IAEA,WAAW,OAAO,CAAC,CAAC,WAAa,cAAc,MAAM,CAAC;AACxD;AAEA,SAAS,aAAa,IAAI;IACxB,OAAO,KAAK,GAAG,CAAC,CAAC;QACf,OAAO;YACL,MAAM,QAAQ,SAAS;YACvB,UAAU,QAAQ,OAAO,CAAC,QAAQ;YAClC,QAAQ,CAAC,QAAQ,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK;YACtD,KAAK,CAAC,QAAQ,OAAO,CAAC,GAAG;QAC3B;IACF;AACF;AAEA,SAAS,eAAe;AACxB,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst employeesList = [...document.querySelectorAll('li')];\nconst employeesContainer = document.querySelector('ul');\n\nfunction sortList(list, dataContainer) {\n  const sortedList = list.sort((a, b) => {\n    const salaryA = +a.dataset.salary.slice(1).replace(',', '');\n    const salaryB = +b.dataset.salary.slice(1).replace(',', '');\n\n    return salaryB - salaryA;\n  });\n\n  sortedList.forEach((employee) => dataContainer.append(employee));\n}\n\nfunction getEmployees(list) {\n  return list.map((element) => {\n    return {\n      name: element.innerText,\n      position: element.dataset.position,\n      salary: +element.dataset.salary.slice(1).replace(',', ''),\n      age: +element.dataset.age,\n    };\n  });\n}\n\nsortList(employeesList, employeesContainer);\ngetEmployees(employeesList);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}